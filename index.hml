<!DOCTYPE html>
<html lang="it">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Speedboat AI Assistant (Gradio Client)</title>
  <style>
    body {
      font-family: "Segoe UI", sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 20px;
    }
    .container {
      background: white;
      border-radius: 20px;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
      max-width: 800px;
      width: 100%;
      padding: 40px;
    }
    h1 {
      color: #667eea;
      text-align: center;
      margin-bottom: 30px;
    }
    .chat-container {
      background: #f7f9fc;
      border-radius: 15px;
      padding: 20px;
      max-height: 400px;
      overflow-y: auto;
      margin-bottom: 20px;
      min-height: 200px;
    }
    .message {
      margin-bottom: 15px;
      padding: 12px 18px;
      border-radius: 12px;
      max-width: 80%;
      word-wrap: break-word;
    }
    .user-message {
      background: #667eea;
      color: white;
      margin-left: auto;
      text-align: right;
    }
    .ai-message {
      background: #e8eaf6;
      color: #333;
      white-space: pre-wrap;
    }
    .input-container {
      display: flex;
      gap: 10px;
    }
    #domanda {
      flex: 1;
      padding: 15px;
      border: 2px solid #e0e0e0;
      border-radius: 10px;
      font-size: 16px;
      transition: border-color 0.3s;
    }
    #domanda:focus {
      outline: none;
      border-color: #667eea;
    }
    #inviaBtn {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
      padding: 15px 30px;
      border-radius: 10px;
      font-size: 16px;
      font-weight: bold;
      cursor: pointer;
      transition: transform 0.2s, box-shadow 0.2s;
    }
    #inviaBtn:hover:not(:disabled) {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
    }
    #inviaBtn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>🚤 Speedboat AI Assistant</h1>
    <div class="chat-container" id="chatContainer"></div>
    <div class="input-container">
      <input
        type="text"
        id="domanda"
        placeholder="Inserisci la tua domanda su Speedboat..."
      />
      <button id="inviaBtn">Invia</button>
    </div>
  </div>

  <!-- Import ufficiale del client Gradio -->
  <script type="module">
    import { Client } from "https://cdn.jsdelivr.net/npm/@gradio/client@latest/dist/index.min.js";

    const chatContainer = document.getElementById("chatContainer");
    const domandaInput = document.getElementById("domanda");
    const inviaBtn = document.getElementById("inviaBtn");

    function aggiungiMessaggio(testo, tipo) {
      const div = document.createElement("div");
      div.className = `message ${tipo}-message`;
      div.textContent = testo;
      chatContainer.appendChild(div);
      chatContainer.scrollTop = chatContainer.scrollHeight;
    }

    async function inviaDomanda() {
      const domanda = domandaInput.value.trim();
      if (!domanda) return;

      aggiungiMessaggio(domanda, "user");
      domandaInput.value = "";
      domandaInput.disabled = true;
      inviaBtn.disabled = true;

      const loading = document.createElement("div");
      loading.className = "message ai-message";
      loading.textContent = "⏳ Elaborazione in corso...";
      chatContainer.appendChild(loading);
      chatContainer.scrollTop = chatContainer.scrollHeight;

      try {
        const client = await Client.connect("mpostinghel/test-ai");
        const domandaCompleta = domanda + "\n Rispondi in modo sintetico.";

        // ✅ Il parametro corretto è 'q'
        const result = await client.predict("/on_gen", {
          q: domandaCompleta,
          max_tok: 600,
        });

        loading.remove();

        const output =
          result?.data?.[0] ||
          result?.data ||
          result ||
          "Nessuna risposta ricevuta.";
        aggiungiMessaggio(output, "ai");
      } catch (err) {
        console.error(err);
        loading.remove();
        aggiungiMessaggio("❌ Errore: " + err.message, "ai");
      } finally {
        domandaInput.disabled = false;
        inviaBtn.disabled = false;
        domandaInput.focus();
      }
    }

    inviaBtn.addEventListener("click", inviaDomanda);
    domandaInput.addEventListener("keypress", (e) => {
      if (e.key === "Enter" && !inviaBtn.disabled) inviaDomanda();
    });

    domandaInput.focus();
  </script>
</body>
</html>
